apiVersion: apps/v1
kind: StatefulSet
metadata:
   name: peer0-netflix-myapp
   labels:
     run: peer0-netflix-myapp   
spec:
  serviceName: peer0-netflix-myapp
  selector:
     matchLabels:
       run: peer0-netflix-myapp
  replicas: 1
  template:
    metadata:
      labels:
       run: peer0-netflix-myapp
    spec:
      containers:
      - name: peer0-netflix-myapp
        image: hyperledger/fabric-peer:1.4.2
        env:
          - name: FABRIC_LOGGING_SPEC
            value: DEBUG
          - name: ORDERER_ADDRESS
            value: orderer-myapp:30750
          - name: CORE_PEER_ADDRESS
            value: peer0-netflix-myapp:30851
          - name: CORE_PEER_LISTENADDRESS
            value: 0.0.0.0:30851
          - name: CORE_PEER_CHAINCODEADDRESS
            value: peer0-netflix-myapp:30852
          - name: CORE_PEER_CHAINCODELISTENADDRESS
            value: 0.0.0.0:30852
          - name: CORE_PEER_GOSSIP_BOOTSTRAP
            value: peer0-netflix-myapp:30851
          - name: CORE_PEER_GOSSIP_EXTERNALENDPOINT
            value: peer0-netflix-myapp:30851
          - name: CORE_PEER_GOSSIP_ORGLEADER
            value: "false"
          - name: CORE_PEER_GOSSIP_USELEADERELECTION
            value: "true"
          - name: CORE_PEER_ID
            value: peer0-netflix-myapp
          - name: CORE_PEER_LOCALMSPID
            value: netflixMSP
          - name: CORE_PEER_PROFILE_ENABLED
            value: "true"
          - name: CORE_PEER_TLS_CERT_FILE
            value: /etc/hyperledger/fabric/tls/server.crt
          - name: CORE_PEER_TLS_ENABLED
            value: "true"
          - name: CORE_PEER_TLS_KEY_FILE
            value: /etc/hyperledger/fabric/tls/server.key
          - name: CORE_PEER_TLS_ROOTCERT_FILE
            value: /etc/hyperledger/fabric/tls/ca.crt
          - name: CORE_PEER_MSPCONFIGPATH
            value: /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/netflix-myapp/users/Admin@netflix-myapp/msp
          - name: CORE_PEER_TLS_CERT_FILE
            value: /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/netflix-myapp/peers/peer0-netflix-myapp/tls/server.crt
          - name: CORE_PEER_TLS_ENABLED
            value: "true"
          - name: CORE_PEER_TLS_KEY_FILE
            value: /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/netflix-myapp/peers/peer0-netflix-myapp/tls/server.key
          - name: CORE_PEER_TLS_ROOTCERT_FILE
            value: /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/netflix-myapp/peers/peer0-netflix-myapp/tls/ca.crt
        volumeMounts:
        - name: dockersock
          mountPath: /var/run/docker.sock
        - name: my-pvc-nfs
          mountPath: /etc/hyperledger/fabric/msp
          subPath: crypto-config/peerOrganizations/netflix-myapp/peers/peer0-netflix-myapp/msp
        - name: my-pvc-nfs
          mountPath: /etc/hyperledger/fabric/tls
          subPath: crypto-config/peerOrganizations/netflix-myapp/peers/peer0-netflix-myapp/tls
        - name: my-pvc-nfs
          mountPath: /opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode
          subPath: chaincode
        - name: my-pvc-nfs
          mountPath: /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto
          subPath: crypto-config
        - name: my-pvc-nfs
          mountPath: /opt/gopath/src/github.com/hyperledger/fabric/peer/scripts
          subPath: scripts
        - name: my-pvc-nfs
          mountPath: /opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
          subPath: channel-artifacts
        workingDir: /opt/gopath/src/github.com/hyperledger/fabric/peer
      volumes:
      - name: my-pvc-nfs
        persistentVolumeClaim:
          claimName: nfs
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock